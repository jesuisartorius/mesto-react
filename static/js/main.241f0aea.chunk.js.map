{"version":3,"sources":["components/Footer.js","images/Logo.svg","components/Header.js","components/ImagePopup.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/api.js","components/Loader/Loader.js","components/App.js","reportWebVitals.js","index.js"],"names":["Footer","className","Header","src","logo","alt","ImagePopup","name","isOpen","card","onClose","onClick","e","target","currentTarget","type","link","CurrentUserContext","createContext","Card","onCardClick","onCardLike","onDeleteClick","onCardDelete","currentUser","useContext","isOwn","owner","_id","isLiked","likes","some","i","preventDefault","style","backgroundImage","length","Main","onEditProfileClick","onAddPlaceClick","onEditAvatarClick","cards","avatar","about","map","PopupWithForm","title","buttonText","children","onSubmit","EditProfilePopup","onUpdateUser","useState","formFields","setFormFields","handleChange","value","useEffect","placeholder","minLength","maxLength","id","required","onChange","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","AddPlacePopup","onAddPlace","evt","api","baseUrl","headers","apiKey","this","_baseUrl","_headers","res","ok","json","Promise","reject","status","fetch","then","_handleResponse","all","getUserData","getInitialCards","method","body","JSON","stringify","cardId","addLike","deleteLike","authorization","Loader","App","setCurrentUser","setCards","isLoading","setIsLoading","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmDeletePopupOpen","setIsConfirmDeletePopupOpen","isPreviewImagePopupOpen","setIsPreviewImagePopupOpen","selectedCard","setSelectedCard","closeAllPopups","closeByEscape","key","document","addEventListener","removeEventListener","getAppInfo","userData","catch","err","console","log","finally","Provider","changeLikeCardStatus","newCard","state","c","deleteCard","filter","error","setUserInfo","setUserAvatar","addCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.241f0aea.chunk.js","sourcesContent":["import React from 'react';\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__text\">&copy; 2021 Mesto Russia</p>\n        </footer>\n    );\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/Logo.03b78ada.svg\";","import React from \"react\";\nimport logo from \"../images/Logo.svg\";\n\nconst Header = () => {\n    return (\n        <header className=\"header\">\n            <img\n                src={logo}\n                alt=\"Логотип сайта\"\n                className=\"header__logo\"\n            />\n        </header>\n    )\n}\n\nexport default Header;","const ImagePopup = ({\n                        name,\n                        isOpen,\n                        card,\n                        onClose\n                    }) => {\n\n    const handleOutsideClick = (e) => {\n        if (e.target === e.currentTarget) {\n            onClose();\n        }\n    };\n\n    return (\n        <section\n            className={`popup popup_type_${name} ${isOpen && \"popup_opened\"}`}\n            onClick={handleOutsideClick}>\n            <div className={`popup__container popup__container_${name}`}>\n                <button\n                    type=\"button\"\n                    className=\"popup__close-button popup__close-button_preview\"\n                    aria-label=\"Close button\"\n                    onClick={onClose}\n                />\n                <img\n                    className=\"popup__image\"\n                    src={\"\" || card.link}\n                    alt=\"bigger size of the card with its link and name\"\n                />\n                <p className=\"popup__preview-title\">{card.name}</p>\n            </div>\n        </section>\n    );\n};\n\nexport default ImagePopup;","import {createContext} from \"react\";\n\nexport const CurrentUserContext = createContext();","import {useContext} from \"react\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nconst Card = ({\n                  card,\n                  onCardClick,\n                  onDeleteClick,\n                  onCardLike,\n                  onCardDelete,\n              }) => {\n    const currentUser = useContext(CurrentUserContext);\n\n    // Определяем, являемся ли мы владельцем текущей карточки\n    const isOwn = card.owner._id === currentUser._id;\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    const handleDeleteSubmit = (e) => {\n        e.preventDefault();\n        onCardDelete(card);\n    }\n\n    return (\n        <>\n            <li className=\"element\">\n                <button\n                    className={`element__delete-button ${\n                        isOwn\n                            ? \"element__delete-button\"\n                            : \"element__delete-button_type_hidden\"\n                    }`}\n                    aria-label=\"Delete button\"\n                    type=\"button\"\n                    onClick={handleDeleteSubmit}\n                />\n                <div\n                    className=\"element__image\"\n                    style={{backgroundImage: `url(${card.link})`}}\n                    onClick={() => onCardClick(card)}\n                />\n                <div className=\"element__flex\">\n                    <h2 className=\"element__text\">{card.name}</h2>\n                    <div className=\"element__like-wrapper\">\n                        <button\n                            type=\"button\"\n                            className={`element__like-button ${\n                                isLiked\n                                    ? \"element__like-button_active\"\n                                    : \"element__like-button\"\n                            }`}\n                            onClick={() => onCardLike(card)}\n                        />\n                        <p className=\"element__like-count\">{card.likes.length}</p>\n                    </div>\n                </div>\n            </li>\n        </>\n    );\n};\n\nexport default Card;","import {useContext} from \"react\";\nimport Card from \"./Card\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nconst Main = ({\n                  onEditProfileClick,\n                  onAddPlaceClick,\n                  onEditAvatarClick,\n                  onCardClick,\n                  onDeleteClick,\n                  cards,\n                  onCardLike,\n                  onCardDelete,\n              }) => {\n    const currentUser = useContext(CurrentUserContext);\n\n    return (\n        <main>\n            <section className=\"profile\">\n                <div>\n                    <div\n                        className=\"profile__avatar-overlay\"\n                        onClick={onEditAvatarClick}\n                    />\n                    <img\n                        src={currentUser.avatar}\n                        alt=\"Аватар пользователя\"\n                        className=\"profile__avatar\"\n                    />\n                </div>\n                <div className=\"profile__info\">\n                    <h1 className=\"profile__name\">{currentUser.name}</h1>\n                    <button\n                        className=\"profile__edit-button\"\n                        aria-label=\"edit button\"\n                        type=\"button\"\n                        onClick={onEditProfileClick}\n                    />\n                    <p className=\"profile__job\">{currentUser.about}</p>\n                </div>\n                <button\n                    className=\"profile__add-button\"\n                    aria-label=\"Add button\"\n                    type=\"button\"\n                    onClick={onAddPlaceClick}\n                />\n            </section>\n\n            <section className=\"elements\">\n                <ul className=\"elements__list\">\n                    {cards.map((card) => (\n                        <Card\n                            key={card._id}\n                            card={card}\n                            onCardClick={onCardClick}\n                            onDeleteClick={onDeleteClick}\n                            onCardLike={onCardLike}\n                            onCardDelete={onCardDelete}\n                        />\n                    ))}\n                </ul>\n            </section>\n        </main>\n    );\n};\n\nexport default Main;","const PopupWithForm = ({\n                           title,\n                           name,\n                           buttonText,\n                           isOpen,\n                           children,\n                           onClose,\n                           onSubmit,\n                       }) => {\n\n    const handleOutsideClick = (e) => {\n        if (e.target === e.currentTarget) {\n            onClose();\n        }\n    };\n\n    return (\n        <section\n            className={`popup popup_type_${name} ${isOpen && \"popup_opened\"}`}\n            onClick={handleOutsideClick}>\n            <div className={`popup__container popup__container_${name}`}>\n                <button\n                    type=\"button\"\n                    className=\"popup__close-button popup__close-button_profile\"\n                    aria-label=\"Close button\"\n                    onClick={onClose}\n                />\n                <form\n                    name={name}\n                    className={`popup__form popup__form_type_${name}`}\n                    onSubmit={onSubmit}\n                >\n                    <h2 className=\"popup__title\">{title}</h2>\n                    {children}\n                    <button type=\"submit\" className=\"popup__button\">\n                        {buttonText}\n                    </button>\n                </form>\n            </div>\n        </section>\n    );\n};\n\nexport default PopupWithForm;","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport {useContext, useEffect, useState} from \"react\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nconst EditProfilePopup = ({isOpen, onClose, onUpdateUser}) => {\n    const currentUser = useContext(CurrentUserContext);\n\n    const [formFields, setFormFields] = useState({\n        name: \"\",\n        about: \"\",\n    });\n\n    const {name, about} = formFields;\n\n    const handleChange = (e) => {\n        setFormFields({...formFields, [e.target.name]: e.target.value});\n    };\n\n    useEffect(() => {\n        setFormFields({\n            name: currentUser.name,\n            about: currentUser.about,\n        });\n    }, [currentUser, isOpen]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onUpdateUser(formFields);\n        setFormFields({name: \"\", link: \"\"});\n    };\n\n    return (\n        <PopupWithForm\n            isOpen={isOpen}\n            onClose={onClose}\n            name=\"edit-profile\"\n            title=\"Редактировать профиль\"\n            buttonText=\"Сохранить\"\n            onSubmit={handleSubmit}\n        >\n            <label className=\"popup__form-field\">\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    className=\"popup__input popup__input_type_name\"\n                    placeholder=\"Имя\"\n                    minLength=\"2\"\n                    maxLength=\"40\"\n                    id=\"name-input\"\n                    required\n                    value={name || \"\"}\n                    onChange={handleChange}\n                />\n                <span className=\"popup__input-error name-input-error\"/>\n            </label>\n            <label className=\"popup__form-field\">\n                <input\n                    type=\"text\"\n                    name=\"about\"\n                    className=\"popup__input popup__input_type_job\"\n                    placeholder=\"Описание\"\n                    minLength=\"2\"\n                    maxLength=\"200\"\n                    id=\"job-input\"\n                    required\n                    value={about || \"\"}\n                    onChange={handleChange}\n                />\n                <span className=\"popup__input-error job-input-error\"/>\n            </label>\n        </PopupWithForm>\n    );\n};\n\nexport default EditProfilePopup;\n","import {useRef} from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nconst EditAvatarPopup = ({isOpen, onClose, onUpdateAvatar}) => {\n    const avatarRef = useRef();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const avatar = avatarRef.current.value;\n        onUpdateAvatar(avatar);\n    };\n\n    return (\n        <PopupWithForm\n            isOpen={isOpen}\n            onClose={onClose}\n            name=\"profile-avatar\"\n            title=\"Обновить аватар\"\n            buttonText=\"Сохранить\"\n            onSubmit={handleSubmit}\n        >\n            <label className=\"popup__form-field\">\n                <input\n                    type=\"url\"\n                    name=\"avatar\"\n                    className=\"popup__input popup__input_type_image-link\"\n                    placeholder=\"Ссылка на фотографию\"\n                    id=\"avatar-input\"\n                    required\n                    ref={avatarRef}\n                />\n                <span className=\"popup__input-error avatar-input-error\"/>\n            </label>\n        </PopupWithForm>\n    );\n};\n\nexport default EditAvatarPopup;","import {useState} from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nconst AddPlacePopup = ({isOpen, onClose, onAddPlace}) => {\n    const [formFields, setFormFields] = useState({name: \"\", link: \"\"});\n    const {name, link} = formFields;\n\n    const handleChange = (e) =>\n        setFormFields({...formFields, [e.target.name]: e.target.value});\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        onAddPlace(formFields);\n        setFormFields({name: \"\", link: \"\"});\n    };\n\n    return (\n        <PopupWithForm\n            isOpen={isOpen}\n            onClose={onClose}\n            name=\"add-card\"\n            title=\"Новое место\"\n            buttonText=\"Создать\"\n            onSubmit={handleSubmit}\n        >\n            <label className=\"popup__form-field\">\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    className=\"popup__input popup__input_type_title\"\n                    placeholder=\"Название\"\n                    required\n                    minLength=\"1\"\n                    maxLength=\"30\"\n                    id=\"title-input\"\n                    value={name}\n                    onChange={handleChange}\n                />\n                <span className=\"popup__input-error title-input-error\"/>\n            </label>\n\n            <label className=\"popup__form-field\">\n                <input\n                    type=\"url\"\n                    name=\"link\"\n                    className=\"popup__input popup__input_type_image-link\"\n                    placeholder=\"Ссылка на изображение\"\n                    required\n                    id=\"url-input\"\n                    value={link}\n                    onChange={handleChange}\n                />\n                <span className=\"popup__input-error url-input-error\"/>\n            </label>\n        </PopupWithForm>\n    );\n};\n\nexport default AddPlacePopup;","class Api {\n    constructor({baseUrl, headers, apiKey}) {\n        this._baseUrl = baseUrl;\n        this._headers = headers;\n    }\n\n    _handleResponse(res) {\n        return res.ok ? res.json() : Promise.reject(`Error: ${res.status}`);\n    }\n\n    getInitialCards() {\n        return fetch(`${this._baseUrl}/cards`, {headers: this._headers}).then(\n            this._handleResponse\n        );\n    }\n\n    getUserData() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: this._headers,\n        }).then(this._handleResponse);\n    }\n\n\n    getAppInfo() {\n        return Promise.all([this.getUserData(), this.getInitialCards()]);\n    }\n\n    addCard({name, link}) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({name, link}),\n        }).then(this._handleResponse);\n    }\n\n    setUserInfo({name, about}) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: this._headers,\n            method: \"PATCH\",\n            body: JSON.stringify({name, about}),\n        }).then(this._handleResponse);\n    }\n\n\n    setUserAvatar(avatar) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            headers: this._headers,\n            method: \"PATCH\",\n            body: JSON.stringify({avatar}),\n        }).then(this._handleResponse);\n    }\n\n\n    addLike(cardId) {\n        return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n            headers: this._headers,\n            method: \"PUT\",\n        }).then(this._handleResponse);\n    }\n\n    deleteLike(cardId) {\n        return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n            headers: this._headers,\n            method: \"DELETE\",\n        }).then(this._handleResponse);\n    }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        return isLiked ? this.addLike(cardId) : this.deleteLike(cardId);\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._baseUrl}/cards/${cardId}`, {\n            headers: this._headers,\n            method: \"DELETE\",\n        }).then(this._handleResponse);\n    }\n\n    addNewCard() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: this._headers,\n            method: \"POST\",\n            body: JSON.stringify({name: this.name, link: this.link}),\n        }).then(this._handleResponse);\n    }\n}\n\nconst TOKEN = \"ced48e6e-7309-4683-b554-3b5b361d985d\";\nconst COHORT_ID = \"cohort-27\";\n\n//  export instance of Api\nconst api = new Api({\n    baseUrl: `https://mesto.nomoreparties.co/v1/${COHORT_ID}`,\n    headers: {\n        authorization: TOKEN,\n        \"Content-Type\": \"application/json\",\n    },\n});\n\nexport default api;","import React from 'react';\nimport './Loader.css'\n\nconst Loader = () => {\n    return (\n        <div className=\"loader\">\n            <div className=\"loader-inner\">\n                <div className=\"loader-line-wrap\">\n                    <div className=\"loader-line\"></div>\n                </div>\n                <div className=\"loader-line-wrap\">\n                    <div className=\"loader-line\"></div>\n                </div>\n                <div className=\"loader-line-wrap\">\n                    <div className=\"loader-line\"></div>\n                </div>\n                <div className=\"loader-line-wrap\">\n                    <div className=\"loader-line\"></div>\n                </div>\n                <div className=\"loader-line-wrap\">\n                    <div className=\"loader-line\"></div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Loader;\n","import {useEffect, useState} from \"react\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport ImagePopup from \"./ImagePopup\";\nimport Main from \"./Main\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport api from \"../utils/api\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport Loader from \"./Loader/Loader\";\n\n\nfunction App() {\n    // Context for current user\n    const [currentUser, setCurrentUser] = useState({\n        name: \"\",\n        about: \"\",\n        avatar: \"\",\n    });\n\n    const [cards, setCards] = useState([]);\n    // Loader state\n    const [isLoading, setIsLoading] = useState(false);\n\n    // Popup States\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [isConfirmDeletePopupOpen, setIsConfirmDeletePopupOpen] = useState(false);\n\n    const [isPreviewImagePopupOpen, setIsPreviewImagePopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState({});\n\n    const handleEditAvatarClick = () => setIsEditAvatarPopupOpen(true);\n    const handleEditProfileClick = () => setIsEditProfilePopupOpen(true);\n    const handleAddPlaceClick = () => setIsAddPlacePopupOpen(true);\n    const handleDeleteClick = () => setIsConfirmDeletePopupOpen(true);\n\n    const handleCardClick = (card) => {\n        setSelectedCard(card);\n        setIsPreviewImagePopupOpen(true);\n    };\n\n    const closeAllPopups = () => {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setIsConfirmDeletePopupOpen(false);\n        setIsPreviewImagePopupOpen(false);\n    };\n\n\n    useEffect(() => {\n        const closeByEscape = (e) => {\n            if (e.key === \"Escape\") {\n                closeAllPopups();\n            }\n        };\n        document.addEventListener(\"keydown\", closeByEscape);\n        return () => {\n            document.removeEventListener(\"keydown\", closeByEscape);\n        };\n    }, []);\n\n    useEffect(() => {\n        setIsLoading(true);\n        api.getAppInfo().then(([userData, cards]) => {\n            setCurrentUser(userData);\n            setCards(cards);\n        }).catch((err) => {\n            console.log(err);\n        }).finally(() => {\n            setIsLoading(false);\n        });\n    }, []);\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked)\n            .then((newCard) => {\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n            });\n    }\n\n    const handleCardDelete = (card) => {\n        api\n            .deleteCard(card._id)\n            .then(() => {\n                setCards((state) => state.filter((c) => c._id !== card._id));\n                closeAllPopups();\n            })\n            .catch((err) => console.error(err));\n    };\n\n    const handleUpdateUser = ({name, about}) => {\n        api\n            .setUserInfo({name, about})\n            .then((userData) => {\n                setCurrentUser({name, about, ...userData});\n                closeAllPopups();\n            })\n            .catch((err) => console.error(err));\n    };\n\n    const handleUpdateAvatar = (avatar) => {\n        api\n            .setUserAvatar(avatar)\n            .then((userData) => {\n                setCurrentUser({avatar, ...userData});\n                closeAllPopups();\n            })\n            .catch((err) => console.error(err));\n    };\n\n    const handleAddPlaceSubmit = ({name, link}) => {\n        api\n            .addCard({name, link})\n            .then((card) => {\n                setCards([card, ...cards]);\n                closeAllPopups();\n            })\n            .catch((err) => console.error(err));\n    };\n\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            {isLoading ? <Loader/> : <Header/>}\n            <Main\n                onEditProfileClick={handleEditProfileClick}\n                onAddPlaceClick={handleAddPlaceClick}\n                onEditAvatarClick={handleEditAvatarClick}\n                onCardClick={handleCardClick}\n                onDeleteClick={handleDeleteClick}\n                cards={cards}\n                onCardLike={handleCardLike}\n                onCardDelete={handleCardDelete}\n            />\n\n            <EditProfilePopup\n                isOpen={isEditProfilePopupOpen}\n                onClose={closeAllPopups}\n                onUpdateUser={handleUpdateUser}\n            />\n\n            <EditAvatarPopup\n                isOpen={isEditAvatarPopupOpen}\n                onClose={closeAllPopups}\n                onUpdateAvatar={handleUpdateAvatar}\n            />\n\n            <AddPlacePopup\n                isOpen={isAddPlacePopupOpen}\n                onClose={closeAllPopups}\n                onAddPlace={handleAddPlaceSubmit}\n            />\n\n            <PopupWithForm\n                name=\"confirm\"\n                isOpen={isConfirmDeletePopupOpen}\n                onClose={closeAllPopups}\n                title=\"Вы Уверены?\"\n                buttonText=\"Да\"\n            />\n\n            <ImagePopup\n                card={selectedCard}\n                onClose={closeAllPopups}\n                isOpen={isPreviewImagePopupOpen}\n                name=\"preview\"\n            />\n            <Footer/>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}